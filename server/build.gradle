plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id "jacoco"
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'org.codesystem'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '18'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

dependencies {
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'org.springframework.boot:spring-boot-starter:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.3'
    implementation 'org.json:json:20240205'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.3'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.3'
    implementation 'com.jayway.jsonpath:json-path:2.9.0'
    testImplementation 'ch.vorburger.mariaDB4j:mariaDB4j:3.0.1'

}

tasks.named('test') {
    useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "OPD-Server"
        property "sonar.projectName", "OPD-Server"
        property "sonar.qualitygate.wait", true
        property "sonar.java.fileByFile", true
        property "sonar.test.exclusions", "src/test/java/**/*"
        property "sonar.token", System.getenv("SONAR_TOKEN_SERVER")
    }
}